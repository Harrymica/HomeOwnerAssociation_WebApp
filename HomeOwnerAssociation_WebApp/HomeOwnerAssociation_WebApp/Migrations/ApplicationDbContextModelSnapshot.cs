// <auto-generated />
using System;
using HomeOwnerAssociation_WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeOwnerAssociation_WebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Address = "Unknown",
                            City = "Unknown",
                            ConcurrencyStamp = "d183716a-32b1-4ad7-89e3-db4ae7a7d9a0",
                            Country = "Unknown",
                            Email = "Admin007@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Emmanuel Chinonso",
                            LockoutEnabled = true,
                            NormalizedEmail = "ADMIN007@GMAIL.COM",
                            NormalizedUserName = "ADMIN007@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEG2rB2DQL47BOFpA+ldXgXdWh1HMMA1VvXz1UBr1XtUEuLfIv2OLODDtK3QMGwAPAg==",
                            PhoneNumber = "Unknown",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d44cb38d-96ff-4b61-a226-6df06bc34d38",
                            TwoFactorEnabled = false,
                            UserName = "Admin007@gmail.com"
                        });
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Assessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinancialManagementId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyOwnersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialManagementId");

                    b.HasIndex("PropertyOwnersId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.BoardMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HOAId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HOAId");

                    b.ToTable("BoardMembers");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Budgeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateOfExpenses")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpensesType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinancialManagementId")
                        .HasColumnType("int");

                    b.Property<int?>("HOAId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("typeOfBudget")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialManagementId");

                    b.HasIndex("HOAId");

                    b.HasIndex("PropertyId");

                    b.ToTable("Budgetings");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Commitee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsedCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Commitees");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.DeedRestriction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateRestricted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HOAId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Restriction_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HOAId");

                    b.HasIndex("PropertyId");

                    b.ToTable("DeedRestrictions");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.ExeptionalBudgeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ExpensesValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FinancialManagementId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("typeOfBudget")
                        .HasColumnType("int");

                    b.Property<int>("typeOfExpences")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialManagementId");

                    b.HasIndex("PropertyId");

                    b.ToTable("ExeptionalBudgetings");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Fee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankTransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateForMonthlyPayment")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FinancialManagementId")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HOAId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RemainingDept")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FinancialManagementId");

                    b.HasIndex("HOAId");

                    b.HasIndex("PropertyId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.FinancialManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExeptionalBudgetingsId")
                        .HasColumnType("int");

                    b.Property<string>("Financialreports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("FinancialManagement");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.HOA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HOA");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.MaintenanceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinancialManagementId")
                        .HasColumnType("int");

                    b.Property<int?>("HOAId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReserveFunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Schedules")
                        .HasColumnType("datetime2");

                    b.Property<int>("propertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialManagementId");

                    b.HasIndex("HOAId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<int>("BudgetingId")
                        .HasColumnType("int");

                    b.Property<int?>("FeesId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialHistoryId")
                        .HasColumnType("int");

                    b.Property<int?>("HOAId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaintenanceHistoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RestrictionId")
                        .HasColumnType("int");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<int?>("propertyOwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HOAId");

                    b.HasIndex("MaintenanceHistoryId");

                    b.HasIndex("PropertyTypeId");

                    b.HasIndex("propertyOwnerId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.PropertyOwners", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HOAId")
                        .HasColumnType("int");

                    b.Property<int?>("MaintenanceHistoryId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HOAId");

                    b.HasIndex("MaintenanceHistoryId");

                    b.ToTable("PropertyOwners");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MonthlyFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PropertyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MonthlyFee = 100.00m,
                            UnitType = "Small Appartment"
                        },
                        new
                        {
                            Id = 2,
                            MonthlyFee = 540.00m,
                            UnitType = "Big Appartment"
                        },
                        new
                        {
                            Id = 3,
                            MonthlyFee = 1600.00m,
                            UnitType = "Garage"
                        });
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HOAId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HOAId");

                    b.ToTable("Rule");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkOrder");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "HouseOwners",
                            NormalizedName = "HOUSEOWNERS"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            RoleId = "1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Assessment", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.Property", "Property")
                        .WithMany("Assessment")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.BankAccount", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.FinancialManagement", null)
                        .WithMany("BankAccounts")
                        .HasForeignKey("FinancialManagementId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.PropertyOwners", "PropertyOwners")
                        .WithMany()
                        .HasForeignKey("PropertyOwnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropertyOwners");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.BoardMember", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.HOA", null)
                        .WithMany("BoardMembers")
                        .HasForeignKey("HOAId");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Budgeting", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.FinancialManagement", null)
                        .WithMany("Budgeting")
                        .HasForeignKey("FinancialManagementId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.HOA", null)
                        .WithMany("Budgetings")
                        .HasForeignKey("HOAId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.Property", "Property")
                        .WithMany("Budgeting")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.DeedRestriction", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.HOA", null)
                        .WithMany("DeedRestrictions")
                        .HasForeignKey("HOAId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.Property", "Property")
                        .WithMany("Restriction")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.ExeptionalBudgeting", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.FinancialManagement", null)
                        .WithMany("ExeptionalBudgetings")
                        .HasForeignKey("FinancialManagementId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Fee", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.FinancialManagement", null)
                        .WithMany("Fees")
                        .HasForeignKey("FinancialManagementId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.HOA", null)
                        .WithMany("Fees")
                        .HasForeignKey("HOAId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.Property", "Property")
                        .WithMany("Fees")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.FinancialManagement", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.Property", null)
                        .WithMany("FinancialHistory")
                        .HasForeignKey("PropertyId");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.MaintenanceHistory", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.FinancialManagement", null)
                        .WithMany("MaintenanceHistory")
                        .HasForeignKey("FinancialManagementId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.HOA", null)
                        .WithMany("MaintenanceHistories")
                        .HasForeignKey("HOAId");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Property", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.HOA", null)
                        .WithMany("Properties")
                        .HasForeignKey("HOAId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.MaintenanceHistory", null)
                        .WithMany("property")
                        .HasForeignKey("MaintenanceHistoryId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.PropertyType", "PropertyType")
                        .WithMany()
                        .HasForeignKey("PropertyTypeId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.PropertyOwners", "propertyOwner")
                        .WithMany("Properties")
                        .HasForeignKey("propertyOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("PropertyType");

                    b.Navigation("propertyOwner");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.PropertyOwners", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.HOA", null)
                        .WithMany("HouseOwners")
                        .HasForeignKey("HOAId");

                    b.HasOne("HomeOwnerAssociation_WebApp.Models.MaintenanceHistory", null)
                        .WithMany("Owner")
                        .HasForeignKey("MaintenanceHistoryId");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Rule", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.HOA", null)
                        .WithMany("Rules")
                        .HasForeignKey("HOAId");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Vendor", b =>
                {
                    b.HasOne("HomeOwnerAssociation_WebApp.Models.Property", "Property")
                        .WithMany("Vendor")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.FinancialManagement", b =>
                {
                    b.Navigation("BankAccounts");

                    b.Navigation("Budgeting");

                    b.Navigation("ExeptionalBudgetings");

                    b.Navigation("Fees");

                    b.Navigation("MaintenanceHistory");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.HOA", b =>
                {
                    b.Navigation("BoardMembers");

                    b.Navigation("Budgetings");

                    b.Navigation("DeedRestrictions");

                    b.Navigation("Fees");

                    b.Navigation("HouseOwners");

                    b.Navigation("MaintenanceHistories");

                    b.Navigation("Properties");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.MaintenanceHistory", b =>
                {
                    b.Navigation("Owner");

                    b.Navigation("property");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.Property", b =>
                {
                    b.Navigation("Assessment");

                    b.Navigation("Budgeting");

                    b.Navigation("Fees");

                    b.Navigation("FinancialHistory");

                    b.Navigation("Restriction");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("HomeOwnerAssociation_WebApp.Models.PropertyOwners", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
